When would you want to use a remote repository rather than keeping all your work local?
-------------------------------------------------------------------------------- 
When I want to work with multiple people over the internet. Also, when I work from multiple
computers, I can just clone the remote anytime, from any computer I want.  It would also act as
a backup for my local repository. In case something happens to my local repo, I can always get
the data back from remote repo.

Why might you want to always pull changes manually rather than having Git automatically stay
up-to-date with your remote repository?
-------------------------------------------------------------------------------- 
I want to pull changes manually because I don't want all of my code to go into the remote
repo. Some of it might not work or it might be experimental and full of bugs. I only want to
push the code which works and I think it's better done manually. Doing it automatically would
mean uploading buggy or unrunnable code on the remote repository. 

Describe the differences between forks, clones, and branches. When would you use one instead of
another?
-------------------------------------------------------------------------------- 
Forks are clones but they exist only on github. Also, forks always link back to the original
repository. Clones create exact copies of repositories, including the history. You can clone a
remote repository or a local repository. You can't fork a local repo since it's github only
feature. Branches are parallel or alternate flowline of your code which exist in the same
repository. You can work on two things in parallel. Keeping one line for stable code and other
for experimental code. You can also merge the two timelines. 

What is the benefit of having a copy of the last known state of the remote stored locally?
-------------------------------------------------------------------------------- 
Sometimes I just might not have internet connection, for example when I am traveling, so I can
use the local copy of remote to compare my changes with my local master branch. Also, I can
merge my local master into remote master stored locally and when I have internet connection and
nobody else is contributing to the project, I can push my branch without any conflicts. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be
harder?
-------------------------------------------------------------------------------- 
I can share my code with my friends using mail or storage device. Then I can talk over mail or
some other means about what to change, what to keep and everything else. But with git, I can
just upload the code online or share the code with my .git file and let my friend checkout the
git log. Also, the entire process of adding new code, keeping copies of modified code and older
code too (just in case) would be kinda pain. I can also create pull requests on github which are
helpful in discussing whatever changes I have made. However, when I think about collaborating
without git, it would be pretty simple and straightforward at first. All I have to do is send my
code to my friend and then talk it over with him about what to keep and what to remove. But as
the code base grows, more people come in to contribute, it will get pretty difficult to keep
track of everything. 